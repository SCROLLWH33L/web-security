from bs4 import BeautifulSoup
from .utils import *
from urllib.parse import urljoin


class ExploitServer:
    def __init__(self, session):
        self.session = session

        print_info("Determining exploit server URL...")

        resp = session.get_path("/")
        soup = BeautifulSoup(resp.text, "html.parser")
        exploit_link = soup.select_one("#exploit-link")

        if exploit_link is None:
            print_fail("Unable to find exploit server URL.")
        else:
            self.url = exploit_link.get("href")
            print_success(f"Exploit server URL: {self.url}\n")

    def craft_response(self, path, head, body, https=True):
        data = {
            "responseFile": path,
            "responseHead": head,
            "responseBody": body,
            "formAction": "STORE",
        }

        if https:
            data["urlIsHttps"] = "on"

        resp = self.session.post(self.url, data=data)

        print_success(f"Added the following HTTP response to {self.url}{path}:\n")
        print(f"{head}\n\n{body}\n")

    # TODO
    def view_exploit(self, path):
        pass

    def access_log(self):
        url = urljoin(self.url, "/log")
        resp = self.session.get(url)
        soup = BeautifulSoup(resp.text, "html.parser")
        return soup.select_one("pre").text

    # TODO: XSS Exploit Server
    def deliver_exploit_to_victim(self, path):
        pass
